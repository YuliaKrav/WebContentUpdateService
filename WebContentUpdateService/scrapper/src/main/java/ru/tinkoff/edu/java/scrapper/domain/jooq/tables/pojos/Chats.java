/*
 * This file is generated by jOOQ.
 */
package ru.tinkoff.edu.java.scrapper.domain.jooq.tables.pojos;


import jakarta.validation.constraints.Size;

import java.beans.ConstructorProperties;
import java.io.Serializable;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.10"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Chats implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer chatNumber;
    private String userName;

    public Chats() {}

    public Chats(Chats value) {
        this.chatNumber = value.chatNumber;
        this.userName = value.userName;
    }

    @ConstructorProperties({ "chatNumber", "userName" })
    public Chats(
        @NotNull Integer chatNumber,
        @Nullable String userName
    ) {
        this.chatNumber = chatNumber;
        this.userName = userName;
    }

    /**
     * Getter for <code>CHATS.CHAT_NUMBER</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Integer getChatNumber() {
        return this.chatNumber;
    }

    /**
     * Setter for <code>CHATS.CHAT_NUMBER</code>.
     */
    public void setChatNumber(@NotNull Integer chatNumber) {
        this.chatNumber = chatNumber;
    }

    /**
     * Getter for <code>CHATS.USER_NAME</code>.
     */
    @Size(max = 300)
    @Nullable
    public String getUserName() {
        return this.userName;
    }

    /**
     * Setter for <code>CHATS.USER_NAME</code>.
     */
    public void setUserName(@Nullable String userName) {
        this.userName = userName;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Chats other = (Chats) obj;
        if (this.chatNumber == null) {
            if (other.chatNumber != null)
                return false;
        }
        else if (!this.chatNumber.equals(other.chatNumber))
            return false;
        if (this.userName == null) {
            if (other.userName != null)
                return false;
        }
        else if (!this.userName.equals(other.userName))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.chatNumber == null) ? 0 : this.chatNumber.hashCode());
        result = prime * result + ((this.userName == null) ? 0 : this.userName.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Chats (");

        sb.append(chatNumber);
        sb.append(", ").append(userName);

        sb.append(")");
        return sb.toString();
    }
}
